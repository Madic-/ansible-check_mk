---

- block:
    - name: Checkmk | Debian | Installing package
      apt:
        deb: "{{ cmk_debian_url }}"
        state: present
      notify:
        - Handler | Restart Apache2
  when: ansible_os_family == "Debian"

- block:
# https://docs.checkmk.com/latest/en/install_packages_redhat.html
    - name: Checkmk | RedHat | Enabling PowerTools
      ini_file:
        path: /etc/yum.repos.d/CentOS-PowerTools.repo
        section: PowerTools
        option: enabled
        value: 1
        owner: root
        group: root
        no_extra_spaces: true
        mode: 0644

    - name: Checkmk | RedHat | Enabling httpd_can_network_connect flag and persist across reboots
      ansible.posix.seboolean:
        name: httpd_can_network_connect
        state: yes
        persistent: yes
      when: ansible_selinux.status == "enabled" and ansible_distribution == "CentOS"

    - name: Checkmk | RedHat | Adding services http / https to firewalld zone public
      ansible.posix.firewalld:
        zone: public
        permanent: yes
        immediate: yes
        state: enabled
        service: "{{ item }}"
      with_items:
        - http
        - https

    - name: Checkmk | RedHat | Installing package
      dnf:
        name: "{{ cmk_redhat_url }}"
        state: present
        disable_gpg_check: true
      notify:
        - Handler | Restart httpd
  when: ansible_os_family == "RedHat"

- name: Checkmk | Configuring | Getting installed Checkmk sites
  command: "omd sites -b"
  register: cmk_sites
  changed_when: false
  check_mode: no

- name: Checkmk | Configuring | Creating Checkmk site {{ cmk_site_name }}
  command: "omd create {{ cmk_site_name }}"
  when: cmk_site_name not in cmk_sites.stdout_lines
  register: cmkdistro_created

- name: Checkmk | Configuring | Setting default user for site {{ cmk_site_name }}
  htpasswd:
    path: /opt/omd/sites/{{ cmk_site_name }}/etc/htpasswd
    name: "{{ cmk_default_user }}"
    password: "{{ cmk_default_password }}"
    owner: "{{ cmk_site_name }}"
    group: "{{ cmk_site_name }}"
    mode: 0640
  when: not ansible_check_mode

- name: Checkmk | Configuring | Creating required directories for user {{ cmk_site_name }}
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cmk_site_name }}"
    group: "{{ cmk_site_name }}"
    mode: 0770
  with_items:
    - /opt/omd/sites/{{ cmk_site_name }}/.ssh
    - /opt/omd/sites/{{ cmk_site_name }}/etc/ipmi-config
  when: not ansible_check_mode

- name: Checkmk | Configuring | Getting Checkmk configuration details
  omdistro_facts:
    name: "{{ cmk_site_name }}"

- name: Checkmk | Configuring | Checkmk part 1
  command: omd config {{ cmk_site_name }} set {{ item.name }} {{ item.value }}
  when: omdistro_site_facts[item.name] is defined and omdistro_site_facts[item.name] != item.value
  with_items: "{{ cmk_site_config }}"
  register: cmkdistro_config1
  notify:
    - Handler | Restart Checkmk

- name: Checkmk | Stopping Site
  command: omd stop {{ cmk_site_name }}
  when: cmkdistro_config1.changed
  tags: skip_ansible_lint

- name: Checkmk | Configuring | Getting Checkmk configuration details
  omdistro_facts:
    name: "{{ cmk_site_name }}"

- name: Checkmk | Configuring | Checkmk part 2
  command: omd config {{ cmk_site_name }} set {{ item.name }} {{ item.value }}
  when: omdistro_site_facts[item.name] is defined and omdistro_site_facts[item.name] != item.value
  with_items: "{{ cmk_site_config }}"
  #register: cmkdistro_config2
  notify:
    - Handler | Restart Checkmk

- name: Checkmk | Configuring | Enable grafana action_urls
  replace:
    path: "/opt/omd/sites/{{ cmk_site_name }}/etc/nagios/conf.d/check_mk_templates.cfg"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    backup: yes
  with_items:
    - { regexp: ".*\\/{{ cmk_site_name }}\\/pnp4nagios\\/index\\.php\\/graph\\?host=\\$HOSTNAME\\$&srv=_HOST_.*", replace: "  action_url                      /grafana/dashboard/script/histou.js?host=$HOSTNAME$&theme=light&annotations=true" }
    - { regexp: ".*\\/{{ cmk_site_name }}\\/pnp4nagios\\/index\\.php\\/graph\\?host=\\$HOSTNAME\\$&srv=\\$SERVICEDESC\\$.*", replace: "  action_url                      /grafana/dashboard/script/histou.js?host=$HOSTNAME$&service=$SERVICEDESC$&theme=light&annotations=true" }
  when: cmk_enable_dual_graphing
