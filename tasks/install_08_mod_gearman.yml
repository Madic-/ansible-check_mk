---

- block:
    # force mod-gearman-module from distribution repository
    - name: mod-gearman | Installing | Templating apt preferences for Ubuntu
      blockinfile:
        path: /etc/apt/preferences
        create: yes
        owner: root
        group: root
        mode: 0644
        block: |
          Package: mod-gearman-module
          Pin: origin "archive.ubuntu.com"
          Pin-Priority: 999
        marker: "## {mark} ANSIBLE CHECKMK MANAGED BLOCK"
  when: ansible_distribution == "Ubuntu"

# mod-gearman-module from console repository requires naemon user / group...
# 1. chown: invalid user: 'naemon:naemon'
# 2. cp: cannot stat '/usr/share/doc/mod-gearman-module/examples/module.conf.gz': No such file or directory
#- name: Installing | Adding group naemon
#  group:
#    name: naemon
#    state: present

#- name: Installing | Adding user naemon
#  user:
#    name: naemon
#    group: naemon

- block:
    - name: mod-gearman | Installing
      apt:
        name:
          - gearman
          - mod-gearman-module
          - mod-gearman-tools
          - libgearman-client-perl
          - libcrypt-rijndael-perl
          #- libgearman7
        state: present
        update_cache: yes
      notify:
        - Handler | Restart gearman-job-server
  when: ansible_os_family == "Debian"

# Crashes in molecule test if not 127.0.0.1
- name: gearmand | Configuring | listen address
  replace:
    path: /etc/default/gearman-job-server
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    owner: www-data
    group: www-data
    mode: 0664
    backup: yes
  with_items:
    - { regexp: 'PARAMS="--listen=localhost \\', replace: 'PARAMS="--listen=127.0.0.1 \\' }
  notify:
    - Handler | Restart gearman-job-server

- name: mod-gearman | Configuring | Creating required mod-gearman directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cmk_site_name }}"
    group: "{{ cmk_site_name }}"
    mode: 0755
  with_items:
    - /etc/mod-gearman
    - /var/log/mod-gearman
    - /var/run/pnp4nagios_gearman_worker

- name: mod-gearman | Configuring | Templating nagios integration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ cmk_site_name }}"
    group: "{{ cmk_site_name }}"
    mode: 0644
  with_items:
    - { src: perfdata.cfg.j2, dest: "/etc/mod-gearman/perfdata.cfg" }
    - { src: mod-gearman_server.cfg.j2, dest: "/etc/mod-gearman/server.cfg" }
    - { src: mod-gearman.cfg.j2, dest: "/etc/mod-gearman/mod-gearman.cfg" }
  notify:
    - Handler | Restart Checkmk

- name: mod-gearman | Configuring | mod-gearman secretfile
  copy:
    dest: /etc/mod-gearman/secret.key
    owner: "{{ cmk_site_name }}"
    group: "{{ cmk_site_name }}"
    mode: 0640
    content: |
      {{ cmk_mod_gearman_secret }}

- name: mod-gearman | Configuring | Linking mod-gearman settings into nagios.d
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ cmk_site_name }}"
    group: "{{ cmk_site_name }}"
    state: link
  with_items:
    #- { src: "/etc/mod-gearman/mod-gearman.cfg", dest: "/opt/omd/sites/{{ cmk_site_name }}/etc/nagios/nagios.d/mod-gearman.cfg" }
    - { src: "/etc/mod-gearman/perfdata.cfg", dest: "/opt/omd/sites/{{ cmk_site_name }}/etc/nagios/nagios.d/perfdata.cfg" }
  notify:
    - Handler | Restart Checkmk

- name: mod-gearman | Configuring | pnp4nagios gearman worker systemd unit
  template:
    src: pnp4nagios_gearman.service.j2
    dest: /etc/systemd/system/pnp4nagios_gearman.service
    owner: root
    group: root
    mode: 0644
  notify:
    - Handler | Restart pnp4nagios_gearman
